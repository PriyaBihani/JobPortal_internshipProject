[{"/Users/kartikgupta/Desktop/piaIntern/src/index.js":"1","/Users/kartikgupta/Desktop/piaIntern/src/App.js":"2","/Users/kartikgupta/Desktop/piaIntern/src/components/SignInAndUp.js":"3","/Users/kartikgupta/Desktop/piaIntern/src/components/Register.js":"4","/Users/kartikgupta/Desktop/piaIntern/src/components/AdminDashboard.js":"5","/Users/kartikgupta/Desktop/piaIntern/src/components/Profile.js":"6","/Users/kartikgupta/Desktop/piaIntern/src/components/ExperienceForm.js":"7","/Users/kartikgupta/Desktop/piaIntern/src/components/ViewPdf.js":"8","/Users/kartikgupta/Desktop/piaIntern/src/components/layout/Navbar.js":"9","/Users/kartikgupta/Desktop/piaIntern/src/store.js":"10","/Users/kartikgupta/Desktop/piaIntern/src/reducer.js":"11","/Users/kartikgupta/Desktop/piaIntern/src/actions.js":"12"},{"size":414,"mtime":1607274810876,"results":"13","hashOfConfig":"14"},{"size":822,"mtime":1607226335985,"results":"15","hashOfConfig":"14"},{"size":4191,"mtime":1607417155548,"results":"16","hashOfConfig":"14"},{"size":6078,"mtime":1607417155561,"results":"17","hashOfConfig":"14"},{"size":2178,"mtime":1607417155548,"results":"18","hashOfConfig":"14"},{"size":3448,"mtime":1607415408402,"results":"19","hashOfConfig":"14"},{"size":1801,"mtime":1607151874160,"results":"20","hashOfConfig":"14"},{"size":1062,"mtime":1607407494867,"results":"21","hashOfConfig":"14"},{"size":2689,"mtime":1607417334396,"results":"22","hashOfConfig":"14"},{"size":522,"mtime":1607274810877,"results":"23","hashOfConfig":"14"},{"size":1343,"mtime":1607417257302,"results":"24","hashOfConfig":"14"},{"size":420,"mtime":1607413739889,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"jmomzy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/kartikgupta/Desktop/piaIntern/src/index.js",[],["54","55"],"/Users/kartikgupta/Desktop/piaIntern/src/App.js",[],"/Users/kartikgupta/Desktop/piaIntern/src/components/SignInAndUp.js",[],"/Users/kartikgupta/Desktop/piaIntern/src/components/Register.js",[],"/Users/kartikgupta/Desktop/piaIntern/src/components/AdminDashboard.js",["56","57"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ViewPdf from \"./ViewPdf\";\n\nconst AdminDashboard = (props) => {\n  const { users, profiles } = props;\n  const [pdfData, setpdfData] = useState(\"\");\n\n  const handleClick = (user) => {\n    const userId = user.id;\n    const hasProfile =\n      profiles &&\n      profiles.some((profile) => {\n        return profile.id === userId;\n      });\n\n    if (!hasProfile) {\n      setpdfData(\"\");\n\n      window.alert(\"no profile for this user\");\n    } else {\n      profiles &&\n        profiles.map((profile) => {\n          if (profile.id == userId) {\n            setpdfData(profile.pdf);\n          }\n        });\n    }\n  };\n  var count = 0;\n\n  return (\n    <div\n      style={{ backgroundColor: \"#111\", minHeight: \"100%\" }}\n      className=\"fluid-container admin\"\n    >\n      <h1 className=\"text-center p-5 text-light \">\n        <span className=\"heading\">Admin Dashboard</span>{\" \"}\n      </h1>\n\n      <div className=\"appl-lists\">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n\n              <th scope=\"col\" className=\"text-center\">\n                Email\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                <button className=\"btn\">Delete All</button>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {users &&\n              users.map((user) => {\n                count++;\n                return (\n                  <tr\n                    onClick={() => {\n                      handleClick(user);\n                    }}\n                  >\n                    <th scope=\"row\">{count}</th>\n                    <td className=\"text-center\">{user.email}</td>\n                    <td className=\"text-center\"></td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n        <div class=\"\">\n          <ViewPdf data={pdfData} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  profiles: state.profiles,\n});\nexport default connect(mapStateToProps)(AdminDashboard);\n","/Users/kartikgupta/Desktop/piaIntern/src/components/Profile.js",["58"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ViewPdf from \"./ViewPdf\";\n\nconst Profile = ({ user, profiles }) => {\n  if (!user) {\n    return <Redirect to=\"/\" />;\n  }\n  const userId = user.id;\n  const hasProfile =\n    profiles &&\n    profiles.some((profile) => {\n      return profile.id === userId;\n    });\n\n  if (!hasProfile) {\n    return <Redirect to=\"/register\" />;\n  }\n  return (\n    <div className=\"profile\">\n      {profiles &&\n        profiles.map((profile) => {\n          if (profile.id === userId) {\n            return (\n              <div className=\"profile-card\">\n                <div className=\"profile-card-image\">\n                  <img src={profile.profileImage} alt=\"person\" />\n                </div>\n                <div className=\"profile-content\">\n                  <div className=\"profile-card-name\">{profile.name}</div>\n                  <div className=\"profile-card-text\">{profile.jobProfile}</div>\n                </div>\n                <div className=\"profile-badges\">\n                  <div className=\"profile-badge\">\n                    <span className=\"key\">Current ctc: </span>\n                    <span className=\"value\"> {profile.ctc} lacs</span>\n                  </div>\n                  <div className=\"profile-badge\">\n                    <span className=\"key\">Years of Experience: </span>{\" \"}\n                    <span className=\"value\"> {profile.expYears} Yrs</span>\n                  </div>\n                </div>\n                <div className=\"experience-badges\">\n                  <div className=\"profile-card-text text-center\">\n                    Experiences\n                  </div>\n                  {profile.experiences &&\n                    profile.experiences.map((exp) => {\n                      return (\n                        <div className=\"experience-badge\">\n                          <div className=\"company-name\">\n                            {exp.companyName}\n                            <span className=\"small\">\n                              {exp.start} - {exp.end}\n                            </span>\n                          </div>\n                          <div>{exp.description}</div>\n                        </div>\n                      );\n                    })}\n                </div>\n\n                <div\n                  class=\"modal fade bd-example-modal-lg\"\n                  tabindex=\"-1\"\n                  role=\"dialog\"\n                  aria-labelledby=\"myLargeModalLabel\"\n                  aria-hidden=\"true\"\n                >\n                  <div class=\"modal-dialog modal-lg\">\n                    <ViewPdf data={profile.pdf} />\n                  </div>\n                </div>\n                <div className=\"btn-resume\">\n                  {\" \"}\n                  <button\n                    type=\"button\"\n                    style={{\n                      background: \"transparent\",\n                      border: \"none\",\n                      color: \"#fff\",\n                    }}\n                    data-toggle=\"modal\"\n                    data-target=\".bd-example-modal-lg\"\n                  >\n                    See Resume\n                  </button>\n                </div>\n              </div>\n            );\n          }\n        })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  profiles: state.profiles,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/Users/kartikgupta/Desktop/piaIntern/src/components/ExperienceForm.js",[],"/Users/kartikgupta/Desktop/piaIntern/src/components/ViewPdf.js",["59","60"],"import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\n\nconst ViewPdf = ({ data }) => {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  return (\n    <div className=\"modal-content\">\n      <Document\n        options={{ workerSrc: \"pdf.worker.js\" }}\n        file={data}\n        onLoadSuccess={onDocumentLoadSuccess}\n      >\n        <Page pageNumber={pageNumber} />\n      </Document>\n      <div className=\"buttons\">\n        <div>\n          {pageNumber == 1 ? null : (\n            <i\n              onClick={() => {\n                setPageNumber(pageNumber - 1);\n              }}\n              className=\"fas fa-arrow-left\"\n            ></i>\n          )}\n          Page\n          <i\n            onClick={() => {\n              setPageNumber(pageNumber + 1);\n            }}\n            className=\"fas fa-arrow-right\"\n          ></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPdf;\n","/Users/kartikgupta/Desktop/piaIntern/src/components/layout/Navbar.js",[],"/Users/kartikgupta/Desktop/piaIntern/src/store.js",[],"/Users/kartikgupta/Desktop/piaIntern/src/reducer.js",[],"/Users/kartikgupta/Desktop/piaIntern/src/actions.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":23,"column":32,"nodeType":"67","messageId":"68","endLine":23,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":25,"column":26,"nodeType":"71","messageId":"72","endLine":25,"endColumn":28},{"ruleId":"65","severity":1,"message":"73","line":23,"column":32,"nodeType":"67","messageId":"74","endLine":23,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":22,"column":23,"nodeType":"71","messageId":"72","endLine":22,"endColumn":25},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-vars","'numPages' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]